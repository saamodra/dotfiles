{
  "[blade.php]": {
    "editor.defaultFormatter": "shufo.vscode-blade-formatter",
    "editor.indentSize": 4,
    "editor.tabSize": 4
  },
  "[blade]": {
    "editor.defaultFormatter": "shufo.vscode-blade-formatter"
  },
  "[c]": {
    "editor.indentSize": 4,
    "editor.tabSize": 4
  },
  "[dart]": {
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.selectionHighlight": false,
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": "off",
    "editor.defaultFormatter": "Dart-Code.dart-code"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[json]": {
    "editor.indentSize": 4,
    "editor.tabSize": 4
  },
  "[php]": {
    "editor.indentSize": 4,
    "editor.tabSize": 4
  },
  "[python]": {
    "editor.indentSize": 4,
    "editor.tabSize": 4
  },
  "[ruby]": {
    "editor.defaultFormatter": "jnbt.vscode-rufo",
    "editor.formatOnSave": false,
    "editor.formatOnType": false,
    "editor.formatOnPaste": false
  },
  "beautify.options": {
    "indent_size": 2,
    "indent_with_tabs": false
  },
  "css.validate": false,
  "chat.editor.fontSize": 12,
  "dart.flutterSdkPath": "D:\\FLUTTER_SDK",
  "diffEditor.ignoreTrimWhitespace": false,
  "editor.accessibilitySupport": "off",
  "editor.codeActionsOnSave": {
    "source.fixAll": "never",
    "source.organizeImports": "never",
    "source.fixAll.eslint": "never"
  },
  "editor.cursorBlinking": "expand",
  "editor.cursorStyle": "line",
  "editor.cursorWidth": 2,
  "editor.fontFamily": "'JetBrainsMono NF', Hack, Menlo, Monaco, 'Courier New', monospace",
  "editor.fontSize": 12,
  "editor.formatOnSave": false,
  "editor.glyphMargin": true,
  "editor.lineHeight": 21,
  "editor.mouseWheelZoom": true,
  "editor.renderWhitespace": "all",
  "editor.rulers": [
    120
  ],
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.vertical": "hidden",
  "editor.semanticHighlighting.enabled": false,
  "editor.snippetSuggestions": "top",
  "editor.suggestSelection": "first",
  "editor.tabSize": 2,
  "editor.tokenColorCustomizations": {
    "[One Dark Pro]": {
      "textMateRules": [
        {
          "scope": [
            "support.class.component.open.jsx",
            "support.class.component.close.jsx",
            "entity.name.function.js"
          ],
          "settings": {
            "foreground": "#61afef"
          }
        },
        {
          "scope": [
            "variable.other.constant.object.js",
            "punctuation.section.embedded.begin.jsx",
            "punctuation.section.embedded.end.jsx"
          ],
          "settings": {
            "foreground": "#abb2bf"
          }
        },
        {
          "scope": [
            "punctuation.definition.tag.jsx"
          ],
          "settings": {
            "foreground": "#5c6370"
          }
        },
        {
          "scope": [
            "variable.other.readwrite.js",
            "variable.other.property.js",
            "variable.parameter",
            "variable.other.object.js"
          ],
          "settings": {
            "foreground": "#56b6c2"
          }
        },
        {
          "scope": [
            "entity.other.attribute-name.jsx"
          ],
          "settings": {
            "foreground": "#e5c07b"
          }
        },
        {
          "scope": [
            "keyword.operator.assignment.js",
            "keyword.operator.assignment.jsx",
            "string.unquoted.js",
            "keyword.operator.typeof.js",
            "meta.embedded.expression.js",
            "constant.other.object.key.js",
            "keyword.operator.logical.js"
          ],
          "settings": {
            "foreground": "#c678dd"
          }
        },
        {
          "scope": [
            "variable.other.constant.object.js"
          ],
          "settings": {
            "foreground": "#e06c75"
          }
        }
      ]
    }
  },
  "emmet.excludeLanguages": [
    "markdown"
  ],
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  },
  "eslint.run": "onType",
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "extensions.experimental.affinity": {
    "vscodevim.neovim": 1
  },
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "files.watcherExclude": {
    "**/.git": true,
    "**/node_modules": true,
    "**/tmp": true
  },
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "gitlens.currentLine.enabled": true,
  "gitlens.gitCommands.skipConfirmations": [
    "fetch:command",
    "switch:command"
  ],
  "gitlens.hovers.currentLine.over": "line",
  "javascript.format.semicolons": "remove",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.validate.enable": false,
  "liveServer.settings.donotShowInfoMsg": true,
  "liveshare.allowGuestDebugControl": true,
  "liveshare.allowGuestTaskControl": true,
  "liveshare.languages.allowGuestCommandControl": true,
  "oneDarkPro.editorTheme": "One Dark Pro",
  "python.languageServer": "Pylance",
  "pytest_runner.pytest_exec_docker": "docker compose run --rm -e FLASK_ENV=test web pytest",
  "redhat.telemetry.enabled": true,
  "ruby.specCommand": "docker compose exec web rspec",
  "rubyLsp.rubyVersionManager": {
    "identifier": "rvm"
  },
  "rubyLsp.bundleGemfile": "/home/woi/ruby-extensions/Gemfile",
  "rufo.exe": "rufo",
  "rufo.useBundler": false,
  "scss.validate": false,
  "search.smartCase": true,
  "stylelint.enable": true,
  "terminal.integrated.cwd": "",
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.enableMultiLinePasteWarning": false,
  "terminal.integrated.fontFamily": "'Operator Mono', 'Inconsolata for Powerline', monospace",
  "terminal.integrated.macOptionIsMeta": true,
  "typescript.tsserver.log": "off",
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.normalModeKeyBindings": [
    {
      "before": [
        "<space>"
      ],
      "commands": [
        "whichkey.show"
      ],
      "silent": true
    },
    {
      "before": [
        "<C-o>"
      ],
      "commands": [
        ":tabn"
      ]
    },
    {
      "before": [
        "<C-i>"
      ],
      "commands": [
        ":tabp"
      ]
    }
  ],
  "vim.useCtrlKeys": true,
  "vim.useSystemClipboard": true,
  "vim.visualModeKeyBindings": [
    {
      "before": [
        "<space>"
      ],
      "commands": [
        "whichkey.show"
      ],
      "silent": true
    }
  ],
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "Commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "/",
      "name": "Comment",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "gcc"
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "f",
      "name": "Format",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Selection",
          "type": "command",
          "command": "editor.action.formatSelection",
          "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "d",
          "name": "Document",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Publish",
          "type": "command",
          "command": "git.publish"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "h",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "i",
      "name": "Insert...",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },
    {
      "key": "m",
      "name": "Minimap",
      "type": "command",
      "command": "editor.action.toggleMinimap"
    },
    {
      "key": "n",
      "name": "Highlight",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":noh<CR>"
    },
    {
      "key": "r",
      "name": "Open Recent",
      "type": "command",
      "command": "workbench.action.openRecent"
    },
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "t",
          "name": "Text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        }
      ]
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "l",
          "name": "Show live share",
          "type": "command",
          "command": "workbench.view.extension.liveshare"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "Terminal...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        }
      ]
    },
    {
      "key": "T",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "t",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "v",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
  "whichkey.sortOrder": "alphabetically",
  "window.menuBarVisibility": "toggle",
  "workbench.colorCustomizations": {
    "[Default Dark+]": {
      "statusBar.background": "#2E2E2E",
      "statusBar.foreground": "#569CD6",
      "statusBarItem.remoteBackground": "#2E2E2E",
      "statusBarItem.remoteForeground": "#569CD6",
      "activityBar.background": "#2E2E2E",
      "tab.inactiveBackground": "#2E2E2E"
    },
    "[One Dark Pro]": {
      "editor.background": "#1e2127",
      "terminal.foreground": "#abb2bf",
      "terminal.ansiBlack": "#1e2127",
      "terminal.ansiBlue": "#61afef",
      "terminal.ansiCyan": "#56b6c2",
      "terminal.ansiGreen": "#98C379",
      "terminal.ansiMagenta": "#c678dd",
      "terminal.ansiRed": "#e06c75",
      "terminal.ansiWhite": "#abb2bf",
      "terminal.ansiYellow": "#d19a66",
      "terminal.ansiBrightBlack": "#5c6370",
      "terminal.ansiBrightBlue": "#61afef",
      "terminal.ansiBrightCyan": "#56b6c2",
      "terminal.ansiBrightGreen": "#98c379",
      "terminal.ansiBrightMagenta": "#c678dd",
      "terminal.ansiBrightRed": "#e06c75",
      "terminal.ansiBrightWhite": "#ffffff",
      "terminal.ansiBrightYellow": "#d19a66"
    }
  },
  "workbench.colorTheme": "One Dark Pro",
  "workbench.editor.empty.hint": "hidden",
  "workbench.editor.enablePreview": false,
  "workbench.editor.showTabs": "multiple",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.productIconTheme": "fluent-icons",
  "workbench.startupEditor": "newUntitledFile",
  "yaml.customTags": ["!vault scalar"],
  "yaml.schemas": {
    "file:///home/woi/.vscode/extensions/atlassian.atlascode-2.10.12/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
},
  "typescript.updateImportsOnFileMove.enabled": "always",
  "window.commandCenter": false,
  "[typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[scss]": {
    "editor.defaultFormatter": "michelemelluso.code-beautifier"
  },
  "[css]": {
    "editor.defaultFormatter": "michelemelluso.code-beautifier"
  },
  "remote.SSH.defaultExtensions": [
    "gitpod.gitpod-remote-ssh"
  ],
  "remote.SSH.remotePlatform": {
    "*.gitpod.io": "linux"
  },
}